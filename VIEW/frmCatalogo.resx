<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAfGQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABjZSURBVHja7Z0JlBTltYDvrMwAMuzbwICA7MvAbCCyKEZNxF1RY8SoMYkSFYkoTzAI
        qAiyS2KSZ+LueYkaYyIxL9GXp1FMcCEa3AiJuKCoIMuMcYuYe4fb2ukzPdMzXd3T3fPdc74DB2a6q+5/
        /6/++qvqLxGCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIIg4ovqG
        5oWgTqiT1GjY9sqBSl+nj1Li9HZ6KcVOd6WL0kFpp7RRWiuFSoHTSslXcpVsCiDjOna2t22+t3Wo3Qu9
        Ftp4bXTwWukeVj+9wuoqVGd9wurvQK9J2j9JBXCB8ndls/JyGC85LzovOJuU55SNytPKBmW98ojykPKg
        8mvlHuUW5QblGuVy/67pyknKUcoEpdSLociLKBsxJL2jZ3vui7wtSr1tjvK2mu5td7m35Q3etvd4Wz/o
        bf+I18IGr42NXiubwuonVE+h+gqvuc1eixfQzskrjHnKZ0lkn/KRUq3sVN5Utih/Uu5V1ihzlLOUI5QR
        Sk8/omQhhCZ3+CzPYU/P6RGe4zme83u9DbZ4m+z0NvrI2yyZNTKPdk1eocxNcuPGyifKXmW7HxnsCPN9
        5ULlcKWf0ralC6GeDt/Wc3S45+z7nsPNntO9nuNUbPu5CAAB1DeCsCPTVmWdskg5Runv56MtQgR1dPhW
        noNjPCfrPEfVzXAERwAIIKl84OeOdyvf9iFuYSaNDKIc5Qt9X7/t+/53z0W6tycCQABN5lNlm09Ona8M
        qGtiMY07frbv0/m+j9t8nzOpDREAAghMBnbOu1aZohyQLiKoo+Mf4Puw1vfp0wxut7kPzxIZXkw/RQDB
        sVt5wC9rFaWqCOro+EW+zQ/4PmR8W727QuZrKlophVForeTSixFAU3jfr1ufkkojgihH/FN8W99vKe1T
        o2y4QtZqSkYppXUw2v/sQC9GAPGK4D5lkpLTnBKI6Pg5vk33taSOHy6A9XPkRk1LhVJZD53oxQggCN5W
        rvdLaEkdDdRx1O/v2/J2S22PGAVQgQAQQNA8q5zm97cnXAIRHT/fv/vZlt4OCAABNCd7lBX+0ErCJBDR
        +Yv9O/eQfwSAAFKD/1cmBn1KUMeQf6J/FzlHAAggxbDbaE8Pv4kowJxn+2dvJc8IAAGkLvZE3KX+jHtc
        EgjLd2v/zJ3kFwEggNTnQ2Xh+2sl7/21cec7zz7LP5PcIgAEkA7sXSOP71gpHe6fEXe+bYWcx8gpAkAA
        aVSQby2Tp88aJ8M0bfkBCOCP5BUBIIA0Ksg3lsrGCQfJFE2bSaCjkhWHAB4lrwgAAaSnAKz4ypTeSh4C
        QAAIoGUJILwoByttEQACQAAtUwBVykiJ8ak0BIAAEEBmCSAkAXs8tZuSjQAQAAJoWQIIUa50RwAIIIgO
        mZQ35yCAQAVgI4H+9V0dQADJFUBavImqOd+dhgAQAAJoJhnU8WX2LrUy5WvKTO+U0bC3pnzX36mGABAA
        Aoie7xLvK/Ma6FMzve+VeV9MnAgiPtzex3aCL/i4vRErve7xZaMQAAJAANHzPakR6yx86n3wAe+TBYFL
        IKLzd/V3slU3IVG7Qs+rIwAEgACi5nui95XGbof1SXsBardAJRD2YVYIt8eRKASAABBA4gQQ4k6lY9AC
        sMUgrlL+hQAQAKS0AKyPLggtChPU0b9ceSPORCEABIAAEi8Aw169Vhn3KCCswy0JIFG1AnhvFQJAAAgg
        wQIwlr29XGT36vgF0El5PCgBfPojBIAAEEASBLD+4xul07JT4hfAYOW1eDdozxrZc/8Msc2x1yeWRKGn
        1PP+NASAABBAbOiRf9t/T5eJ+rGd/QnQnKYKYEwQ67/vWi17V58m3/Z70KuiUKoUIAAEgADiFkDNwmNl
        uq8FMUYZ5E+BZjdWABXVAbzvzQSw5jT5lgsgWpJGIQAEgADiF4COuD9YfKJ83QUQau8yH2nnIgAEgABa
        lgDC6RvTSAABIAAEkJECqPD1IBAAAkAALVAA1vYjlEIEgAAQQMsTQGh7ihEAAkAALVMAxhAEgAAQQMsV
        wGgEgAAQQMsVQAUCQAAIoOUKoBIBIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAAB
        IABAAAgAAQACQAAIABAAAkAAgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQ
        AAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEg
        AASAABAAAkAACAAQAAJAAIAAEAACAASAABAAIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAA
        AkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQACAABIAAAAEg
        AAQACAABIADyjQAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAA
        BIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAA
        CAAQAAJAAIAAEAACAASAABAAIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAE
        gAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABkFcEgAAQACAABIAAAAEgAAQACAABIADy
        jQAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAI
        AAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEgAASAABAAAkAACAAQAAJAAIAA
        EAACAASAABAABYkAEAACQAAIAAEgAASAABAAAkAACAABIAAEgAAQAAJAAAgAASAABIAAEAACQAAIAAEg
        AASAABAAAkAACAABIAAEgAAQAAJAAAgAASCA2kaul7X1EPGzCCDGHDcip8nOMQJoXgHMC6LT2s/svUE+
        3btGPraE7V4tNbadu1bJrvdWyY6dK+Xtd1fIG28vly1vXi/Pv75Ent66WNb//Vr5v79dI7/ffLX878uL
        5MGXFsm6FxfKr15YIL98foH84q9XyT3PzZef6593v7BQ7ref2XKNPPzKYnlMO+Zf9PP+YZ+t3/Gefqfl
        dl+QxZuqAojYx32275YDy4XlxHJjObJcWc4sd5ZDz+U9llvLseXacm4/Y21gbWFtYm1jbWRtZW1mbed5
        3mFtam1rbWxtbW1ubR+T3GOQ/xNz5IcIIHkCmKH8Q9msvKQ8r/xFeVJ5wgp2+3JZ/+p18qdQQVnBbLpK
        7t14pdyx4Qq56bHLZO3D35Vlv7lIrr7vArnyrm/I7Jumy4WrTpXzFh0v0y89QqadPV6OO7lMvnL0CDny
        sMHypXH95LCRvWTygK4yoaSjHFLcXsZ3bycHd24rB7dvLePatpKxBXlSlZtT27kqc7Klsl2BjO1eJOP7
        dZYJw4tl0iHaKaeOlKPss+cfI1/76dfl4t9eLNc+OVd+qsX8oBbvJitYLdBPmiqEVBFAaPttX3Sf3rV9
        s320fbV9tn23HFguLCeWG8uR5cpyZrmzHNr2Wk4tt5Zjy7Xl3HJvbWBtYW1ibWNtZG1lbWZtZ59tbWlt
        am1rbWxtbW1ubW81YLVgNWG1YTVitRISttXQa0vkScvntuvlr7oPL2xfJptNWO+skK0qmdd2rJRtD82S
        pQigHtS81T/8mlzQwAbFKoB2Si+lm9JZ6eiFWvT+WmmnDdRuyhAZPrSnTB7UTSb27SSHdNViseLJyqr9
        HpPQGKcsgvIIKhqgMkYify/0+aHvreihRW+d1jqFFejT8+Q2O6LZ0au6ETJoTgGEttGO7NZxnport9x7
        vsy7cqqcYdtj++jbFJnvoPIaLc+R+Q4RqoNyqw2rEasVqxmrnWE9ZdIoFcuYEplc2VcONcEcMkCmTBoo
        h39pqBxxXKkcdXqlTK3Q/4thO2MRwBRld8YJQDfon7eeLZcEJICoqLnls89qf/zAsMRXphGhoi2zgizr
        I4cuPUnOefQyWaNHoyd0JLU7VQVg22bb+MhsWW3FV9pbJvt3lYV18nRri8YQhACmKjWZKIAPf/ZNmROP
        ABoRWS6AqjQruPqEUD60h0xaqcPYZ+fL/9j5rZ1Hp4AA9mnbvqJD57tWTpPzdBsnRhzVK6FRApimfJBx
        ArDzwPtnyPcQQNyU27nwJYfLKXbuaueizSiA5/W7Ltdz55Gt86W0gfkdBFCPAMJGsWcpn2ScAOxI8buZ
        cp2fbyGAAERgRXXhYXLSM1fK7TbJlkQBvKksVQ56aFbtj+YpIzM838kSwIwgrriknACsKJ+cKzc3MCxM
        NwFUJYEGRdAmX8YuO0XO3XKNPFR79WBtwgTwkfJzZZySbf8/rn/tj7ZKsACqUiTXyRDAkowVgBbo7+2S
        TZIE0E8ZG0BBVITNHtvoZbRS6ttqRT9CGa4MUQYpB3nHMgH1Vfo4JUpvp5dS7PTyf+vjv9PfP2eof3ap
        f29FA8VaZjPRj86WNTYDv22pPBugAB5X3la+61dgPi9Yj6AEELl/5Z7vUZ6LIZ7ffmG57R2Ry1A+S5xQ
        /vuG5XegMthzPNy3fZTnenTY1aHIeYx4a6khARQqv8xYAby1TF6cOFAOr6cogxRAsTfuMG/ooWGddJAX
        wQAnVFAlXkA9lG5KF2+0DkqRcoDSRin07cxXcpUcJ9vJCqOx253ln5HjQ+sC/96Ovl19fT9GheXxc1nl
        5UjVT86Si56ZJ7ePHxCIANor1ylHKFl1dP54BVAVdqVghLdLiee/g+e7VVies5uQ26wIssNyHMpzvue6
        tdJWaae0923o5LXQXenpNRIu7AEupoFeW4O9jYZ6/YVo38DRv6uyKSMF4NeGd3xvqpxRz2RRqXeuICI7
        omiyo3TQpnbW5opQARd6cRZ70Y0OH27aDTVFhTKugY4XiwBylDZROn5TBVDlYhrp29DNO1x+GrWD1FNH
        kfWW47WY1YAAxirvZqwAbCLwD5fKinoEMNoNTDRedq29Iw2MkEG8ApAGOn+sAgj930g/cnb038tq6Y2X
        iGdcUlIAdhrw2hLZYHdVRRmajvHhFxGfDNr6MHpkPAJoRNQngCoX/lAfQhfQ6aMO/zdktAD8luC9do4a
        ZcPK/HyXCCYKfN5gRDMIIDTMH+RH+1yao14BnBbEDUApL4BqHwUcXypfrmMUUO6TbUTwIujtpwZVSRKA
        TcB2pePH1Pn7KX8Oso+ltABsLuCZeXJbpzZycB0S6EppJGzCqq3PVlckUABjXDatSHlMnd8mWG8Oeo2C
        VBeAnQq8/8R/yY+qDpTDIiYFSyiPhIbNSPf0jhqkAEb5Ub8D5/gxT6p29jsqP2xxAvDnA/5lCzrM+pJM
        CzsFsCNUVv8u9c46E/FHe5+UC6Kz2uU7uxxZSFob7PQhypQHqn1RkhYpgBDvrJBX7dn3pSfLuSOKa4en
        eVuvi+3x33QmBSI7wNOLrAR0kkzjAGWSslx5JZF9Kq0EEHaj0HtbF8sj25fL1TX7Z0Urle620Icnz86X
        CpT8NCBPyXVyQvfOp5EcknUkrItsz1kof3lp0uYFXqMHeM0W+3MTZyhXKb9T3ktGX0pLAUSsevOx8o4v
        +fWUP5DyW+Ve5U7ljhTlduU2n9j5ifJj5UZljbLYb/aYqZynnOh3f/VVOnmhZ4wMonTuPN/XPr7vJ3ou
        ZnpuFnuubvTc/cRzeZvnNlXb/U6vzQeVR3x5us1+Z98n1UleqDRtBdCCsHO/fyo7lVf9MpAV+cXKeKVL
        uoqgjk7fxffpYt/HP/s+7/AcfEo9IADwS6S+JtyflDnKkMjThzTp+Nm+7XN8X3ZHW8EIEABEl8Erfqmo
        T6qOCOo44vfx59pfodMjAAgGGzYf55NiKSOBiI5v23asH/FpMwQAAWMzyLN9xrnZJRDR+fN9wZCdtBMC
        gMRhS0Zf4ZecUkUArfxcv5r2QQCQeGzm/HK/Vt4sEgjr/Dk+KqFGEAAkERtqn5ACAjjeL+fRJggAksxf
        leEvLWy28/5hynO0AwKAZmL3arnv19+R7v46tGQKoKPf+UY7IABoLuwV18/Nlx8Ut69dLTg/SZ3fLvct
        UP5FGyAAaGZ2rZbqdRfKola5+5eeLswL9nn8iGG/LQ1+ThCvsAYEAAE+SfmrGbKgML+2wbsWBCSBOm7v
        ne4PaZF3BAApNhLY/ehsuWFkr9q3L3WJd7GPiM7fxi/3MeOPACBl5wTWyEcvLZJ184+RU20k8NlDIj86
        U+St6+O6t3+Ecmsilq4CBACJWWXp9afmysr1c2T4Zy+K7G386jV2rj/A7/D7GzlFACQ2/a4Q7NuzunZR
        CluC6kilR+TDRHU8zNPDf3a5L8bC03wtXADl3OOdMc8QPKv8QrnWF+c427nY/+0X/jM15CvtBfDPa06Q
        s4IQwHBlO0kFSKurQjvnfFlOl+jv4YxZAL243RMgfbB1Nbcvly2nV8pUif56+JgFYOeFt5FYgPQRwMuL
        5MEObep9PXzMAhB/6ozzQoA0mQD82bdkTgzD/8pYrwm3Ve4muQCpf/Tfco08PKqXTI5h+F/ZmJtC7GaQ
        jSQZIIXP/ZfJ5rlHy1djPPpXNvausIOrWfARICV583rZtHKanBfjkT82AdQhAbs7bLWyLfwmkRqIGYo1
        +hEMGsHa/XnbuUrefW6+/GzGoXJSI478lS6KJi//PLp6/yqwt+5aJb97Y6k8rWxUnoGobHxrmby0Y6W8
        ZRM1yOCLm1YsJ5YbaqjhGrI/t14n619eJOsemS2rFhwrZ3ZoXTvj35jOb4yJ+yUQn90huSumSZfJg2TC
        +AEy5RCok1BujhwmR5x7iBx/2zky6y/fk7veXSGvt9SOr/v+2sYr5Y5bz5ZLzhkvx1luwnMF0WuptLdM
        7txWDvZO39iOH2JY3I+K/vGyz18zPTBsWAH1Yw1WlpstVbOPlFOfmis3a2d4oyV1/A1XyE2XHC6nZGfV
        1kyZ54TaaByVcVIS5MIxXQPaqJZGuYngMhWBHg3vtGf6azL0/N5uT31qntwy84uOX077NxulStsgBZCr
        DFaqSG7TRNCuUMbdosNhPcd7NsMEsO/1JfL0j8+U7xTkyVg6fkrQKxHrRppRRiKB+ETw1UqZaufGOhrY
        W5PmR/1dq2TXk3qKc+IY+QodP2U4SMlL1OKx7ZThJDk+CXRsI+Pu/IZcajPjaXxd+nkd0cw8oKD2qM/p
        YfNS5W3QX2mV6OXjC5Q+fp4R+nJoHLUiuGiKnPzyIvnN3jXycRpd1vvoxYXyq29NlBMCPupTF02jwg/K
        3fxUPSlhC1IW+uSgyWCAXymAhhnip1I2O14xqrdM/sOlstJu+KhJ8SH/zpWy/aFZsnRID5kYUOcPyXC0
        F/Fg6iMmDvKjfW+lY6LfGRGrELIhJnL8HK2dN+CInGyp+sEZcsHrS+WZVJ3oe22JbFh1qnwz7HJwEEPW
        IX7kauNHL+ojdrKEyIgo9FnbEdPK5ehnrpTbd6+W6ppUmehbLXvsXobjSuXLAR31Qx2/SzKHrASRspGf
        +7kIendpK5V3nSeXp8IEoU303X6uzCoqrL0VNYiJvhF0fIKILgIb1rW3c+HzJ8uJm66Se3cn+XJh6Kj/
        3Hz5+TcmyPEBHPWr/DMO9AlkgiAacoGdFvTuIGN/+nWZaQ+H2JWCmgR3fJvhf2WxPHbTdLmwe5GMD2jI
        b0f9zn7eShBEI0YDHZSh9oDIby6Sq/20YF9NwB3fPlM/+4V1F8rCsf3kMPni3v14z/UH+KkNQRBNDOtA
        /ZSys8bJcY9fLj+wlWF0RPBJTZwd3z5DO/7Lj10ma88cK8cE1PFtyG+X9XrI/iseBEHEE1n7O5J1qFLr
        ZKdVyNR1F8mifyyWR3eurH2b776GFiQJ+/999jv2u/YZp5bL0RLMpb0QQ5UiWo0ggo8i72C1jx336yIT
        5h0tX/3tTLn2+QVyny0o8c4KedVuKrLJQ8P+bv9m/2c/Yz9rv2O/G9AR//NbnGX/RF8rmokgEjg9IPuf
        9S4L63jluTlSNaZEDrVbdG3hyKUnyTmG/d3+zf7PfkbiW2QiGnZnIxN9BJG8s4LaW0AjH8yqCOvgZfLF
        YhxBHukj7+azib7WNAlBJD/sunpf7+jJfkzbjvp2Gy8TfQTRzKOB9sogPyInUgT22bbYpD0AxuU9gkih
        sCOx3WY7TP7zSbugOr6dRthTaO2EB1EIImXDJgl7uAjiGRGEnje304uBPufAcJ8g0iTskWObmbdJulHy
        xSRgVRQp/MdiJbJ/gtHmF4ro+ASR3nMEhS6DEp8rGO5SsDv2SmX/hN4wl0WxzynkkzqCyLzI9tFBKxdD
        gf89j3N7giCIDIl/AwVoyy6wugbaAAAAAElFTkSuQmCC
</value>
  </data>
</root>